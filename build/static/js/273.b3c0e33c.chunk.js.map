{"version":3,"file":"static/js/273.b3c0e33c.chunk.js","mappings":"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","sources":["pages/Restaurant.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\n// import {useParams} from \"react-router-dom\"\r\nimport type {restaurantType, dishType} from \"@/types/common\"\r\nimport { setCartCount } from \"@/redux/reducers/cartReducer\";\r\nimport { useAppDispatch, useAppSelector } from \"@/redux/store\";\r\n\r\nconst restaurantMock: restaurantType = {\r\n  id: 1,\r\n  title: \"Чилим Seafood\",\r\n  image: \"https://images.unsplash.com/photo-1515669097368-22e68427d265?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80\",\r\n  description: \"РЫБА, МОРЕПРОДУКТЫ. Проект-привет с Дальнего Востока. Содержателен с точки зрения белков. Харизматичен, как магаданская креветка. Вызывает привыкание к гребешку, крабу и вонголе. Кормим, поим, доставляем. Из Японского моря прямо в ваши тарелки!\"\r\n}\r\n\r\nconst dishesMock: dishType[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Креветки по-карибкси\",\r\n    description: \"Королевские креветки, приготовленные по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1598514983318-2f64f8f4796c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\r\n    price: 1000,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Lorem ipsum\",\r\n    description: \"Треска, приготовленная по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1598515214211-89d3c73ae83b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\r\n    price: 800,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Lorem ipsum\",\r\n    description: \"Треска, приготовленная по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1511690656952-34342bb7c2f2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=764&q=80\",\r\n    price: 700,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Lorem ipsum\",\r\n    description: \"Треска, приготовленная по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1554502078-ef0fc409efce?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1084&q=80\",\r\n    price: 700,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Lorem ipsum\",\r\n    description: \"Треска, приготовленная по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1619526881542-c81baff85fa4?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\",\r\n    price: 700,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Lorem ipsum\",\r\n    description: \"Треска, приготовленная по лучшим традициям карибсой кухни\",\r\n    image: \"https://images.unsplash.com/photo-1621852003739-b54d49ff3431?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1098&q=80\",\r\n    price: 700,\r\n  }\r\n]\r\n\r\nexport default function Restaurant() {\r\n  // const { id } = useParams();\r\n  const [restaurant, setRestaurant] = useState<restaurantType>({\r\n    id: null,\r\n    title: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n  })\r\n\r\n  const [dishes, setDishes] = useState<dishType[]>([])\r\n\r\n  useEffect(() => {\r\n    setRestaurant(restaurantMock);\r\n    setDishes(dishesMock);\r\n  }, []);\r\n  \r\n  return (\r\n    <Box className=\"restaurant\">\r\n        <div className=\"restaurant__hero-image-wrapper\">\r\n          <img className=\"restaurant__hero-image\" src={restaurant.image} alt={restaurant.title}/>\r\n          <span className=\"restaurant__hero-title\">{restaurant.title}</span>\r\n        </div>\r\n        \r\n        <Container sx={{ mt: \"64px\", mb: \"48px\", px: \"0px !important\" }} maxWidth=\"xl\">\r\n          <h1 className=\"restaurant__title\">Наши блюда</h1>\r\n          <Grid container spacing={4}>\r\n            {dishes.map((card) => (\r\n              <Grid item key={card.id} xs={12} sm={6} md={3}>\r\n                <CardComponent card={card}></CardComponent>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction CardComponent ({card}: {card: dishType}) {\r\n  const count = useAppSelector(state => state.cartReducer.count)\r\n  const dispatch = useAppDispatch()\r\n  const addCartCoun = () => {\r\n    dispatch(setCartCount(count + 1));\r\n  }\r\n  return (\r\n    <Card\r\n      sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}\r\n    >\r\n      <div className=\"restaurant__card-image-wrapper\">\r\n        <img className=\"restaurant__card-image\" src={card.image} alt={card.title}/>\r\n      </div>\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        <h2>\r\n          {card.title}\r\n        </h2>\r\n        <Typography>\r\n          {card.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <div className=\"restaurant__card-add\">\r\n          <Button size=\"large\" onClick={addCartCoun}>Добавить</Button>\r\n          <h3>{card.price} РУБ.</h3>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}"],"names":["restaurantMock","id","title","image","description","dishesMock","price","Restaurant","_useState","useState","_useState2","_slicedToArray","restaurant","setRestaurant","_useState3","_useState4","dishes","setDishes","useEffect","_jsxs","Box","className","children","_jsx","src","alt","Container","sx","mt","mb","px","maxWidth","Grid","container","spacing","map","card","item","xs","sm","md","CardComponent","_ref","count","useAppSelector","state","cartReducer","dispatch","useAppDispatch","Card","height","display","flexDirection","CardContent","flexGrow","Typography","CardActions","Button","size","onClick","setCartCount"],"sourceRoot":""}